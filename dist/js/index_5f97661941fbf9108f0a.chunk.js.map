{"version":3,"file":"js/index_5f97661941fbf9108f0a.chunk.js","sources":["webpack:///./src/js/index.js","webpack:///./src/css/index.css","webpack:///./src/css/myStylus.styl"],"sourcesContent":["require('../css/index.css');        //两种模块化规范都可以\r\nimport '../css/myStylus.styl';      //两种模块化规范都可以\r\nimport _ from 'lodash'              //特别实用的一个库，npm i lodash --save\r\n// import \"@babel/polyfill\"         //配合babel-lader进行一些高级语法转低级语法的弥补(一些低版本浏览器不存在的特性),而事实上我们配置了\"useBuiltIns\": \"usage\" 后会自动引入到业务代码，业务代码中我们不用手动引入！\r\nconst $ = require('jquery');\r\n\r\n\r\n\r\n$('.tab-item').on('click', function (e) {\r\n    $('.tab-item').removeClass('tab-item-actve')\r\n    $(e.currentTarget).addClass('tab-item-actve')\r\n\r\n    var type = e.target.getAttribute('type')\r\n    myScrollTo(type, 500)\r\n})\r\nfunction myScrollTo(type) {\r\n    var myIndex;\r\n    var heights = [];\r\n    [].slice.call($('.card-aline')).forEach(function(ele, index){\r\n        if (ele.id == type) {\r\n            myIndex = index;\r\n        }\r\n        heights.push($(ele).height())\r\n    })\r\n    window.allHeight = heights.reduce(function(a,b){return a+b})    //滚动内容总高，用于计算可滚动高度\r\n    var arr = heights.slice(0, myIndex)\r\n    var y;\r\n    y = arr.length != 0 ? arr.reduce(function (a, b)  {return a + b}) : 0\r\n    scrollStart(y)\r\n}\r\n\r\nwindow.timer = '';\r\n\r\nfunction scrollStart(y) {\r\n    clearInterval(timer);\r\n    var isHeight = $('.scroll-wrap').height()\r\n    var k = allHeight - isHeight     //最高滚动距离，总高度减去盒子高度\r\n\r\n    // var child = [].slice.call($('.card-aline'))\r\n    // var lastChild = child[child.length -1]\r\n    // var lastChildheight = $(lastChild).height()\r\n    // var k = isHeight - lastChildheight\r\n\r\n    var el = document.getElementsByClassName('scroll-wrap')[0]\r\n    var currentPosition = el.scrollTop ;\r\n\r\n    timer = setInterval(function() {\r\n        var el = document.getElementsByClassName('scroll-wrap')[0]\r\n        var currentPosition = el.scrollTop ;\r\n        var curPos;\r\n        if(Math.abs(currentPosition - y) < 7){\r\n            clearInterval(timer);\r\n            $('.scroll-wrap').scrollTop(y);\r\n            console.log('滚完了')\r\n        }else{\r\n            curPos = currentPosition > y ? currentPosition - 7 : currentPosition + 7;\r\n            if(curPos > k){    //如果大于最大可滚动高度\r\n                clearInterval(timer);\r\n                console.log('超过滚动高度，老子不滚啦！')\r\n                $('.scroll-wrap').scrollTop(k);\r\n            }else{\r\n                $('.scroll-wrap').scrollTop(curPos);\r\n            }\r\n        }\r\n    },1);\r\n}\r\n\r\nconsole.log(1)\r\nconsole.log(_.join(['a','b','c'],'***'))    ","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpEA;;;;;;;ACAA;;;;A","sourceRoot":""}